// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  jQuery(function($) {
    var RSSEditor, URLView, _ref;
    URLView = (function(_super) {
      __extends(URLView, _super);

      function URLView() {
        this.onButtonClicked = __bind(this.onButtonClicked, this);
        _ref = URLView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      URLView.prototype.el = $('#rss-url-block');

      URLView.prototype.initialize = function() {
        URLView.__super__.initialize.apply(this, arguments);
        this.$el.find('.button-hero').on('click', this.onButtonClicked);
        return rivets.bind(this.el, {
          model: this.model
        }).publish();
      };

      URLView.prototype.onButtonClicked = function() {
        var _this = this;
        this.$el.find('.spinner').show();
        return $.post('admin-ajax.php?action=asg-rss-check-url', this.model.toJSON(), function(response) {
          _this.$el.find('.spinner').hide();
          return alert(response);
        });
      };

      return URLView;

    })(Backbone.View);
    RSSEditor = (function(_super) {
      __extends(RSSEditor, _super);

      function RSSEditor(editor) {
        this.onPreviewClick = __bind(this.onPreviewClick, this);
        RSSEditor.__super__.constructor.call(this, editor);
        $('#rss-settings-block .button').on('click', this.onPreviewClick);
        this.model = new Backbone.Model();
        new asgSettingsView({
          model: this.model,
          el: $('#rss-settings-block')
        });
        new URLView({
          model: this.model
        });
      }

      RSSEditor.prototype.onPreviewClick = function() {
        return Preview.show();
      };

      return RSSEditor;

    })(window.asgSourceEditor);
    return window.asgRegisteredSourceEditors.rss = RSSEditor;
  });

}).call(this);
